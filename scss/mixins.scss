@mixin nowrap {
  white-space: nowrap;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin before {
  &:before {
    content: "";
    display: block;
    position: absolute;
    @include transition(all .3s);
    @content;
  }
}

@mixin after {
  &:after {
    content: "";
    display: block;
    position: absolute;
    @include transition(all .3s);
    @content;
  }
}

@mixin invisLink {
  position: relative;
  & > a,
  .invisBtn {
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    text-indent: 200%;
    white-space: nowrap;
    cursor: pointer;
    z-index: 5;
  }
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin transform($transform) {
  -moz-transform: $transform;
  -ms-transform: $transform;
  -webkit-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin border-radius-top-right($radius) {
  -webkit-border-top-right-radius: $radius;
  -moz-border-radius-topright: $radius;
  -ms-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin border-radius-top-left($radius) {
  -webkit-border-top-left-radius: $radius;
  -moz-border-radius-topleft: $radius;
  -ms-border-top-left-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin border-radius-bottom-right($radius) {
  -webkit-border-bottom-right-radius: $radius;
  -moz-border-radius-bottomright: $radius;
  -ms-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
}

@mixin border-radius-bottom-left($radius) {
  -webkit-border-bottom-left-radius: $radius;
  -moz-border-radius-bottomleft: $radius;
  -ms-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
}

@mixin back-img($size, $position, $repeat) {
  background-size: $size;
  background-position: $position;
  background-repeat: $repeat;
}

@mixin font($size, $line, $color, $weight, $lSpace) {
  @if $size !=null {
    font-size: $size;
  }

  @if $line !=null {
    line-height: $line;
  }

  @if $color !=null {
    color: $color;
  }

  @if $weight !=null {
    font-weight: $weight;
  }

  @if $lSpace !=null {
    letter-spacing: $lSpace;
  }
}

@mixin filter($filter) {
  -webkit-filter: $filter;
  -moz-filter: $filter;
  -ms-filter: $filter;
  -o-filter: $filter;
  filter: $filter;
}

@mixin linear-gradient($direction, $fromColor, $toColor) {
  background-color: $toColor;
  -webkit-background-clip: padding-box;
  -moz-background-clip: padding-box;
  background-clip: padding-box;
  background-image: -webkit-gradient(linear, $direction, from($fromColor), to($toColor));
  background-image: -webkit-linear-gradient($direction, $fromColor, $toColor);
  background-image: -moz-linear-gradient($direction, $fromColor, $toColor);
  background-image: -ms-linear-gradient($direction, $fromColor, $toColor);
  background-image: -o-linear-gradient($direction, $fromColor, $toColor);
  background-image: linear-gradient($direction, $fromColor, $toColor);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1, StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}

@mixin iconLeft {
  position: relative;
  display: table;

  [class*="icon"] {
    display: block;
    position: absolute;
    top: 50%;
    left: 0px;
  }
}
